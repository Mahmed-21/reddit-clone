{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/post.service\";\nimport * as i3 from \"@angular/forms\";\nexport class EditPostComponent {\n  constructor(route, postService, router) {\n    this.route = route;\n    this.postService = postService;\n    this.router = router;\n    this.post = {\n      title: '',\n      content: ''\n    };\n  }\n  ngOnInit() {\n    this.postId = +this.route.snapshot.paramMap.get('id');\n    // Load the post details based on the post ID\n    this.postService.getPost(this.postId).subscribe(response => {\n      this.post = response.data;\n    }, error => {\n      console.error(error);\n    });\n  }\n  onSubmit() {\n    this.postService.updatePost(this.postId, this.post).subscribe(response => {\n      console.log('Post updated successfully!', response);\n      this.router.navigate(['']);\n      // Optionally, we can navigate to the post details page after editing.\n    }, error => {\n      console.error('Error updating post', error);\n    });\n  }\n  static #_ = this.ɵfac = function EditPostComponent_Factory(t) {\n    return new (t || EditPostComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PostService), i0.ɵɵdirectiveInject(i1.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditPostComponent,\n    selectors: [[\"app-edit-post\"]],\n    decls: 17,\n    vars: 2,\n    consts: [[1, \"container\", \"mt-4\"], [1, \"card\"], [1, \"card-body\"], [1, \"createPost-header\"], [3, \"submit\"], [1, \"form-group\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"name\", \"title\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"content\"], [\"id\", \"content\", \"name\", \"content\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function EditPostComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h2\");\n        i0.ɵɵtext(5, \"Edit Post\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"form\", 4);\n        i0.ɵɵlistener(\"submit\", function EditPostComponent_Template_form_submit_6_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"label\", 6);\n        i0.ɵɵtext(9, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function EditPostComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.post.title = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 5)(12, \"label\", 8);\n        i0.ɵɵtext(13, \"Content\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"textarea\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function EditPostComponent_Template_textarea_ngModelChange_14_listener($event) {\n          return ctx.post.content = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"button\", 10);\n        i0.ɵɵtext(16, \"Update Post\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.post.title);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.post.content);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n    styles: [\".container[_ngcontent-%COMP%] {\\n    background-color: #2d2d2d;\\n    color: #ffffff; \\n    padding: 20px;\\n    border-radius: 8px;\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n    width: 70%;\\n    margin: auto;\\n  }\\n  \\n  .form-control[_ngcontent-%COMP%] {\\n    background-color: #2d2d2d;\\n    color: #fff;\\n    border: none;\\n    border-radius: 10px;\\n  }\\n  \\n  .btn-primary[_ngcontent-%COMP%] {\\n    background-color: #3333B3;\\n    border: none;\\n  }\\n  \\n  .btn-primary[_ngcontent-%COMP%]:hover {\\n    background-color: #181888;\\n    color: #f5f5f5d1;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZWRpdC1wb3N0L2VkaXQtcG9zdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLHdDQUF3QztJQUN4QyxVQUFVO0lBQ1YsWUFBWTtFQUNkOztFQUVBO0lBQ0UseUJBQXlCO0lBQ3pCLFdBQVc7SUFDWCxZQUFZO0lBQ1osbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UseUJBQXlCO0lBQ3pCLFlBQVk7RUFDZDs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixnQkFBZ0I7RUFDbEIiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyZDJkMmQ7XHJcbiAgICBjb2xvcjogI2ZmZmZmZjsgXHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICAgIHdpZHRoOiA3MCU7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgfVxyXG4gIFxyXG4gIC5mb3JtLWNvbnRyb2wge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJkMmQyZDtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICB9XHJcbiAgXHJcbiAgLmJ0bi1wcmltYXJ5IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzMzQjM7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgfVxyXG4gIFxyXG4gIC5idG4tcHJpbWFyeTpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTgxODg4O1xyXG4gICAgY29sb3I6ICNmNWY1ZjVkMTtcclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EditPostComponent","constructor","route","postService","router","post","title","content","ngOnInit","postId","snapshot","paramMap","get","getPost","subscribe","response","data","error","console","onSubmit","updatePost","log","navigate","_","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","PostService","Router","_2","selectors","decls","vars","consts","template","EditPostComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","EditPostComponent_Template_form_submit_6_listener","EditPostComponent_Template_input_ngModelChange_10_listener","$event","EditPostComponent_Template_textarea_ngModelChange_14_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\MrKing\\Desktop\\Frontend\\redditClone-frontend\\src\\app\\edit-post\\edit-post.component.ts","C:\\Users\\MrKing\\Desktop\\Frontend\\redditClone-frontend\\src\\app\\edit-post\\edit-post.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Route, Router } from '@angular/router';\nimport { PostService } from '../services/post.service';\nimport { ServiceResponse } from '../services/service-response.service';\n\n@Component({\n  selector: 'app-edit-post',\n  templateUrl: './edit-post.component.html',\n  styleUrls: ['./edit-post.component.css']\n})\nexport class EditPostComponent implements OnInit{\n  \n  postId: number;\n  post: any = { title: '', content: '' };\n\n  constructor(private route: ActivatedRoute, private postService: PostService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.postId = +this.route.snapshot.paramMap.get('id');\n\n    // Load the post details based on the post ID\n    this.postService.getPost(this.postId).subscribe(\n      (response: ServiceResponse<any>) => {\n        this.post = response.data;\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n\n  onSubmit() {\n    this.postService.updatePost(this.postId, this.post).subscribe(\n      response => {\n        console.log('Post updated successfully!', response);\n        this.router.navigate(['']);\n        // Optionally, we can navigate to the post details page after editing.\n      },\n      error => {\n        console.error('Error updating post', error);\n      }\n    );\n  }\n\n}\n","<div class=\"container mt-4\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <div class=\"createPost-header\">\n          <h2>Edit Post</h2>\n        </div>\n        <form (submit)=\"onSubmit()\">\n          <div class=\"form-group\">\n            <label for=\"title\">Title</label>\n            <input type=\"text\" class=\"form-control\" id=\"title\" [(ngModel)]=\"post.title\" name=\"title\" required>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"content\">Content</label>\n            <textarea class=\"form-control\" id=\"content\" [(ngModel)]=\"post.content\" name=\"content\" required></textarea>\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary\">Update Post</button>\n        </form>\n      </div>\n    </div>\n  </div>\n  "],"mappings":";;;;AAUA,OAAM,MAAOA,iBAAiB;EAK5BC,YAAoBC,KAAqB,EAAUC,WAAwB,EAAUC,MAAc;IAA/E,KAAAF,KAAK,GAALA,KAAK;IAA0B,KAAAC,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAF3F,KAAAC,IAAI,GAAQ;MAAEC,KAAK,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAE,CAAE;EAEiE;EAEvGC,QAAQA,CAAA;IACN,IAAI,CAACC,MAAM,GAAG,CAAC,IAAI,CAACP,KAAK,CAACQ,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAErD;IACA,IAAI,CAACT,WAAW,CAACU,OAAO,CAAC,IAAI,CAACJ,MAAM,CAAC,CAACK,SAAS,CAC5CC,QAA8B,IAAI;MACjC,IAAI,CAACV,IAAI,GAAGU,QAAQ,CAACC,IAAI;IAC3B,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH;EAEAE,QAAQA,CAAA;IACN,IAAI,CAAChB,WAAW,CAACiB,UAAU,CAAC,IAAI,CAACX,MAAM,EAAE,IAAI,CAACJ,IAAI,CAAC,CAACS,SAAS,CAC3DC,QAAQ,IAAG;MACTG,OAAO,CAACG,GAAG,CAAC,4BAA4B,EAAEN,QAAQ,CAAC;MACnD,IAAI,CAACX,MAAM,CAACkB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;MAC1B;IACF,CAAC,EACDL,KAAK,IAAG;MACNC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CAAC,CACF;EACH;EAAC,QAAAM,CAAA,G;qBAhCUvB,iBAAiB,EAAAwB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAI,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjB/B,iBAAiB;IAAAgC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV9Bd,EAAA,CAAAgB,cAAA,aAA4B;QAIdhB,EAAA,CAAAiB,MAAA,gBAAS;QAAAjB,EAAA,CAAAkB,YAAA,EAAK;QAEpBlB,EAAA,CAAAgB,cAAA,cAA4B;QAAtBhB,EAAA,CAAAmB,UAAA,oBAAAC,kDAAA;UAAA,OAAUL,GAAA,CAAApB,QAAA,EAAU;QAAA,EAAC;QACzBK,EAAA,CAAAgB,cAAA,aAAwB;QACHhB,EAAA,CAAAiB,MAAA,YAAK;QAAAjB,EAAA,CAAAkB,YAAA,EAAQ;QAChClB,EAAA,CAAAgB,cAAA,gBAAkG;QAA/ChB,EAAA,CAAAmB,UAAA,2BAAAE,2DAAAC,MAAA;UAAA,OAAAP,GAAA,CAAAlC,IAAA,CAAAC,KAAA,GAAAwC,MAAA;QAAA,EAAwB;QAA3EtB,EAAA,CAAAkB,YAAA,EAAkG;QAEpGlB,EAAA,CAAAgB,cAAA,cAAwB;QACDhB,EAAA,CAAAiB,MAAA,eAAO;QAAAjB,EAAA,CAAAkB,YAAA,EAAQ;QACpClB,EAAA,CAAAgB,cAAA,mBAA+F;QAAnDhB,EAAA,CAAAmB,UAAA,2BAAAI,8DAAAD,MAAA;UAAA,OAAAP,GAAA,CAAAlC,IAAA,CAAAE,OAAA,GAAAuC,MAAA;QAAA,EAA0B;QAAyBtB,EAAA,CAAAkB,YAAA,EAAW;QAE5GlB,EAAA,CAAAgB,cAAA,kBAA8C;QAAAhB,EAAA,CAAAiB,MAAA,mBAAW;QAAAjB,EAAA,CAAAkB,YAAA,EAAS;;;QANblB,EAAA,CAAAwB,SAAA,IAAwB;QAAxBxB,EAAA,CAAAyB,UAAA,YAAAV,GAAA,CAAAlC,IAAA,CAAAC,KAAA,CAAwB;QAI/BkB,EAAA,CAAAwB,SAAA,GAA0B;QAA1BxB,EAAA,CAAAyB,UAAA,YAAAV,GAAA,CAAAlC,IAAA,CAAAE,OAAA,CAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}